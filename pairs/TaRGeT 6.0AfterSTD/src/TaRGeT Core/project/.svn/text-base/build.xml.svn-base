<?xml version="1.0" encoding="UTF-8"?>
<project name="br.ufpe.cin.target.core" default="build.jars" basedir=".">

	<property name="basews" value="${ws}" />
	<property name="baseos" value="${os}" />
	<property name="basearch" value="${arch}" />
	<property name="basenl" value="${nl}" />
	<property name="dest.folder" value="../../installer/release/temp" />

	<property environment="env" />

	<!-- Compiler settings. -->
	<property name="javacFailOnError" value="false" />
	<property name="javacDebugInfo" value="on" />
	<property name="logExtension" value=".log" />
	<property name="compilerArg" value="" />
	<property name="javacSource" value="1.5" />
	<property name="javacTarget" value="1.5" />
	<path id="path_bootclasspath">
		<fileset dir="${java.home}/lib">
			<include name="*.jar" />
		</fileset>
	</path>
	<property name="bootclasspath" refid="path_bootclasspath" />
	<property name="bundleJavacSource" value="${javacSource}" />
	<property name="bundleJavacTarget" value="${javacTarget}" />
	<property name="bundleBootClasspath" value="${bootclasspath}" />

	<target name="init" depends="properties">
		<condition property="pluginTemp" value="${buildTempFolder}/plugins">
			<isset property="buildTempFolder" />
		</condition>
		<property name="pluginTemp" value="${basedir}" />
		<condition property="build.result.folder" value="${pluginTemp}/core">
			<isset property="buildTempFolder" />
		</condition>
		<property name="build.result.folder" value="${basedir}" />
		<property name="temp.folder" value="${basedir}/temp.folder" />
		<property name="plugin.destination" value="${basedir}" />
	</target>

	<target name="properties" if="eclipse.running">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" />
	</target>

	<target name="build.update.jar" depends="init" description="Build the plug-in: br.ufpe.cin.target.core for an update site.">
		<delete verbose="off" dir="${temp.folder}" />
		<mkdir dir="${temp.folder}" />
		<antcall target="build.jars" />
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/" />
		</antcall>
		<zip destfile="${dest.folder}/br.ufpe.cin.target.core_1.0.0.jar" basedir="${temp.folder}/br.ufpe.cin.target.core_1.0.0" filesonly="false" whenempty="skip" update="false" />
		<delete verbose="off" dir="${temp.folder}" />
		<delete verbose="off" dir="@dot" />
	</target>

	<target name="@dot" depends="init" unless="@dot" description="Create jar: br.ufpe.cin.target.core @dot.">
		<delete verbose="off" dir="${temp.folder}/@dot.bin" />
		<mkdir dir="${temp.folder}/@dot.bin" />
		<path id="@dot.classpath">
			<fileset dir="${env.ECLIPSE_HOME}/plugins" includes="*.jar" />
			<fileset dir="${env.ECLIPSE_HOME}/plugins" includes="**/*.jar" />
			<fileset dir="${dest.folder}" includes="*.jar" />
			<fileset dir="${dest.folder}" includes="**/*.jar" />
		</path>
		<!-- compile the source code -->
		<javac destdir="${temp.folder}/@dot.bin" failonerror="${javacFailOnError}" verbose="off" debug="${javacDebugInfo}" includeAntRuntime="no" bootclasspath="${bundleBootClasspath}" source="${bundleJavacSource}" target="${bundleJavacTarget}">
			<compilerarg line="${compilerArg}" compiler="${build.compiler}" />
			<classpath refid="@dot.classpath" />
			<src path="../src/java/" />
			<!--<compilerarg value="@${basedir}/project/javaCompiler...args" compiler="org.eclipse.jdt.core.JDTCompilerAdapter" />-->
			<compilerarg line="-log '${temp.folder}/@dot.bin${logExtension}'" compiler="org.eclipse.jdt.core.JDTCompilerAdapter" />
		</javac>
		<!-- Copy necessary resources -->
		<copy verbose="off" todir="${temp.folder}/@dot.bin" failonerror="true" overwrite="false">
			<fileset dir="../src/java/" excludes="**/*.java, **/package.htm*" />
		</copy>
		<mkdir dir="${build.result.folder}" />
		<copy verbose="off" todir="${build.result.folder}/@dot" failonerror="true" overwrite="false">
			<fileset dir="${temp.folder}/@dot.bin" />
		</copy>
		<delete verbose="off" dir="${temp.folder}/@dot.bin" />
	</target>

	<target name="src.zip" depends="init" unless="src.zip">
		<mkdir dir="${build.result.folder}" />
		<zip destfile="${build.result.folder}/src.zip" filesonly="false" whenempty="skip" update="false">
			<fileset dir="../src/java/" includes="**/*.java" />
		</zip>
	</target>

	<target name="build.jars" depends="init" description="Build all the jars for the plug-in: br.ufpe.cin.target.core.">
		<available property="@dot" file="${build.result.folder}/@dot" />
		<antcall target="@dot" />
	</target>

	<target name="build.sources" depends="init">
		<available property="src.zip" file="${build.result.folder}/src.zip" />
		<antcall target="src.zip" />
	</target>

	<target name="gather.bin.parts" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/br.ufpe.cin.target.core_1.0.0" />
		<copy verbose="off" todir="${destination.temp.folder}/br.ufpe.cin.target.core_1.0.0" failonerror="true" overwrite="false">
			<fileset dir="${build.result.folder}/@dot" includes="**" />
		</copy>
		<copy verbose="off" todir="${destination.temp.folder}/br.ufpe.cin.target.core_1.0.0" failonerror="true" overwrite="false">
			<fileset dir="../" includes="plugin.xml,META-INF/,icons/icon_128_128.gif,icons/about.png,icons/view_icon.jpg,splash.bmp,plugin_customization.ini,splash.bmp,toc.xml,TaRGeTToc.xml,html/" />
		</copy>
	</target>

	<target name="build.zips" depends="init">
	</target>

	<target name="gather.sources" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/br.ufpe.cin.target.core_1.0.0" />
		<copy verbose="off" file="${build.result.folder}/src.zip" todir="${destination.temp.folder}/br.ufpe.cin.target.core_1.0.0" failonerror="false" overwrite="false" />
	</target>

	<target name="gather.logs" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/br.ufpe.cin.target.core_1.0.0" />
		<copy verbose="off" file="${temp.folder}/@dot.bin${logExtension}" todir="${destination.temp.folder}/br.ufpe.cin.target.core_1.0.0" failonerror="false" overwrite="false" />
	</target>

	<target name="clean" depends="init" description="Clean the plug-in: br.ufpe.cin.target.core of all the zips, jars and logs created.">
		<delete verbose="off" failonerror="false" dir="${build.result.folder}/@dot" />
		<delete verbose="off" failonerror="false" file="${build.result.folder}/src.zip" />
		<delete verbose="off" failonerror="false" file="${plugin.destination}/br.ufpe.cin.target.core_1.0.0.jar" />
		<delete verbose="off" failonerror="false" file="${plugin.destination}/br.ufpe.cin.target.core_1.0.0.zip" />
		<delete verbose="off" failonerror="false" dir="${temp.folder}" />
	</target>

	<target name="refresh" depends="init" if="eclipse.running" description="Refresh this folder.">
		<eclipse.convertPath fileSystemPath="O:/local_tools/btc_research/target/core" property="resourcePath" />
		<eclipse.refreshLocal resource="${resourcePath}" depth="infinite" />
	</target>

	<target name="zip.plugin" depends="init" description="Create a zip containing all the elements for the plug-in: br.ufpe.cin.target.core.">
		<delete verbose="off" dir="${temp.folder}" />
		<mkdir dir="${temp.folder}" />
		<antcall target="build.jars" />
		<antcall target="build.sources" />
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/" />
		</antcall>
		<antcall target="gather.sources">
			<param name="destination.temp.folder" value="${temp.folder}/" />
		</antcall>
		<delete verbose="off">
			<fileset dir="${temp.folder}" includes="**/*.bin${logExtension}" />
		</delete>
		<zip destfile="${plugin.destination}/br.ufpe.cin.target.core_1.0.0.zip" basedir="${temp.folder}" filesonly="true" whenempty="skip" update="false" />
		<delete verbose="off" dir="${temp.folder}" />
	</target>

</project>

